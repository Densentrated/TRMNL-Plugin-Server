name: Test Code And Deploy to VPS

on:
  push:
    branches:
      - main # Change 'main' to any branch you want

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Install protoc first
      - name: Install Protoc using setup-protoc action
        uses: arduino/setup-protoc@v3
        with:
          version: "23.x"

      - name: Set PROTOC environment variable
        run: echo "PROTOC=$(which protoc)" >> $GITHUB_ENV

      - name: Verify protoc installation
        run: |
          protoc --version
          echo "PROTOC is set to: $PROTOC"

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Run Rust tests
        run: |
          cargo test

      - name: Build Release Binary
        run: |
          cargo build --release

      - name: Deploy and restart service
        if: success()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Create app directory if it doesn't exist
            mkdir -p ${{ secrets.APP_DIR }}
            echo "Directory prepared: ${{ secrets.APP_DIR }}"

      - name: Copy binary to VPS
        if: success()
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "target/release/trmnl_plugin_server"
          target: "${{ secrets.APP_DIR }}/trmnl_plugin_server"

      - name: Create deployment script
        if: success()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.APP_DIR }}
            cat > deploy.sh << 'EOF'
            #!/bin/bash
            # Stop existing service if running
            if pgrep -f trmnl_plugin_server > /dev/null; then
              echo "Stopping existing service..."
              pkill -f trmnl_plugin_server
              sleep 3
            fi

            # Make binary executable
            chmod +x trmnl_plugin_server

            # Start new service
            nohup ./trmnl_plugin_server &
            echo "Service started successfully"
            EOF
            chmod +x deploy.sh

      - name: Execute deployment script
        if: success()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.APP_DIR }}
            nohup ./deploy.sh > deploy.log 2>&1 &
            sleep 2
            echo "Deployment initiated"
