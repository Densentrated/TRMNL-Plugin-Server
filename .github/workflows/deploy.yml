name: Test Code And Deploy to VPS

on:
  push:
    branches:
      - main # Change 'main' to any branch you want

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Run Rust tests
        run: |
          cargo test

      - name: Build Release Binary
        run: |
          cargo build --release

      - name: Stop existing service
        if: success()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Stop existing service if running
            if pgrep -f trmnl_plugin_server > /dev/null; then
              echo "Stopping existing service..."
              pkill -f trmnl_plugin_server
              sleep 2
              echo "Service stopped"
            else
              echo "No existing service found"
            fi

      - name: Prepare deployment directory
        if: success()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Create app directory if it doesn't exist
            mkdir -p ${{ secrets.APP_DIR }}
            echo "Directory prepared: ${{ secrets.APP_DIR }}"

      - name: Copy binary to VPS
        if: success()
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "target/release/trmnl_plugin_server"
          target: "${{ secrets.APP_DIR }}/trmnl_plugin_server"

      - name: Start service on VPS
        if: success()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.APP_DIR }}
            chmod +x trmnl_plugin_server
            nohup ./trmnl_plugin_server > server.log 2>&1 &
            echo "Service started successfully"
